apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: josesito
spec:
  resources:
  - name: adminui-git
    type: git
  - name: adminui-image
    type: image
  tasks:
  - name: build-adminui
    taskRef:
      name: s2i-php
    params:
      - name: TLSVERIFY
        value: "false"
      - name: PATH_CONTEXT
        value: "./"
    resources:
      inputs:
      - name: source
        resource: adminui-git
      outputs:
      - name: image
        resource: adminui-image
  # - name: build-analytics-dataservice
  #   taskRef:
  #     name: s2i-nodejs
  #   params:
  #     - name: TLSVERIFY
  #       value: "false"
  #     - name: PATH_CONTEXT
  #       value: "./data-service"
  #   resources:
  #     inputs:
  #     - name: source
  #       resource: analytics-git
  #     outputs:
  #     - name: image
  #       resource: analytics-dataservice-image
  # - name: build-analytics-webapp
  #   taskRef:
  #     name: s2i-nodejs
  #   params:
  #     - name: TLSVERIFY
  #       value: "false"
  #     - name: PATH_CONTEXT
  #       value: "./web"
  #   resources:
  #     inputs:
  #     - name: source
  #       resource: analytics-git
  #     outputs:
  #     - name: image
  #       resource: analytics-webapp-image
  # - name: deploy-patientui
  #   taskRef:
  #     name: openshift-client
  #   runAfter:
  #     - build-patientui
  #   params:
  #   - name: ARGS
  #     value: "new-app patientui"
  # - name: deploy-ol
  #   taskRef:
  #     name: openshift-client
  #   params:
  #   - name: ARGS
  #     value: "new-app ykoyfman/ol-example-health"



  # - name: deploy-adminui
  #   taskRef:
  #     name: openshift-client
  #   runAfter:
  #     - build-adminui
  #   params:
  #   - name: ARGS
  #     value: "new-app adminui"



  # - name: deploy-analytics-dataservice
  #   taskRef:
  #     name: openshift-client
  #   runAfter:
  #     - build-analytics-dataservice
  #   params:
  #   - name: ARGS
  #     value: "new-app analytics-dataservice -e HOST_IP=analytics-dataservice-tekton-pipelines.[YOUR CLUSTER NAME AND HASH]-0001.us-east.containers.appdomain.cloud -e MONGODB=[MONGO CREDS] -e SCEME=http -e MAPBOX_ACCESS_TOKEN=[YOUR MAPBOX TOKEN] -e DATA_SOURCE_API=ol-example-health-tekton-pipelines.[YOUR CLUSTER NAME AND HASH]-0001.us-east.containers.appdomain.cloud/resources/v1/"
  # - name: deploy-analytics-webapp
  #   taskRef:
  #     name: openshift-client
  #   runAfter:
  #     - build-analytics-webapp
  #   params:
  #   - name: ARGS
  #     value: "new-app analytics-webapp -e DATA_SERVER=http://analytics-dataservice-tekton-pipelines.[YOUR CLUSTER NAME AND HASH]-0001.us-east.containers.appdomain.cloud -e MAPBOX_ACCESS_TOKEN=[YOUR MAPBOX TOKEN]"
  # - name: expose-ol-example-health
  #   taskRef:
  #     name: openshift-client
  #   runAfter:
  #     - deploy-ol
  #   params:
  #   - name: ARGS
  #     value: "expose svc/ol-example-health"
  # - name: expose-patientui
  #   taskRef:
  #     name: openshift-client
  #   runAfter:
  #     - deploy-patientui
    # params:
    # - name: ARGS
    #   value: "expose svc/patientui"



  # - name: expose-adminui
  #   taskRef:
  #     name: openshift-client
  #   runAfter:
  #     - deploy-adminui
  #   params:
  #   - name: ARGS
  #     value: "expose svc/adminui"


  # - name: expose-analytics-dataservice
  #   taskRef:
  #     name: openshift-client
  #   runAfter:
  #     - deploy-analytics-dataservice
  #   params:
  #   - name: ARGS
  #     value: "expose svc/analytics-dataservice --port=3000"
  # - name: expose-analytics-webapp
  #   taskRef:
  #     name: openshift-client
  #   runAfter:
  #     - deploy-analytics-webapp
  #   params:
  #   - name: ARGS
  #     value: "expose svc/analytics-webapp --port=4000"